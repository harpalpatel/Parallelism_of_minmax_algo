MINIMAX ALGORITHM
PROCEDURE
• Minimax algorithm can be applied giving there are two players in the game 
who alternate at playing with a given number of conceivable moves for a given 
position in the game. The game is resolved, i.e. the game does not utilize dice 
rules of moves. 
• The game is described by information transparency, i.e. every player knows the 
entire condition of the game at each position. The leaves of the game tree 
present the last game positions where the result of the game is self-evident. 
• The point of the minimax search in the game tree is to locate the ideal technique 
as a grouping of most ideal moves of a given player considering conceivable 
moves of the other player up to a given depth.

 ARCHITECTURE: 
• The full game tree has a root speaking to the underlying format of the game and 
vertices and edges speaking to every single conceivable move to the finish of 
the game. Every single conceivable move for the present player are children 
nodes of the root and then all moves available to the next player are children 
nodes of these nodes. 
• Each part of the tree speaks to a conceivable move that player could make at a 
given point in the game. Assessing the game at a leaf of the game tree yields 
the anticipated status of the game after that arrangement of moves is made by 
the players. Game tree search is gone for finding ideal technique for the game. 
• The algorithm accept that the second player attempts to limit the gain of the 
primary player, while the principal player endeavors to augment his gain, 
subsequently the name of the algorithm. 
• The game tic-tac-toe (referred to likewise as noughts-and-crosses) is a 
straightforward game in which two players, spoke to as O and X, substitute in 
stamping spaces on a 3x3 matrix. 
• The game tree of tic-tac-toe with the possible combinations of the first two 
moves (3*3).

PARALLEL COMPUTATIONAL MODEL:
• To parallelize, minimax algorithm partitions the search tree into sub-trees and 
allocate them to different processors for searching. For that reason, the tree is 
partitioned at the top level and every processor investigates a single possible move. 
• However, if alpha-beta cuts are to be utilized, each tree should look for its very 
own bounds, and can't improve utilization of bounds found by different processors.

Algorithm:
1. If Step is zero or node is a terminal node then:
return Heuristic Value of Node
2. If maximizer:
value = -infinity
assign a thread for each child node
value = maximum of value and minimax(child, depth - 1)
3. Return Value from Maximizer
4. If minimizer:
value = +infinity
assign a thread for each child node
value = minimum of value and minimax(child, depth - 1)
 5.Return Value from Minimizer

